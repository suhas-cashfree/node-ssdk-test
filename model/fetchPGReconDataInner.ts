/**
 * Cashfree Payment Gateway APIs
 * Cashfree\'s Payment Gateway APIs provide developers with a streamlined pathway to integrate advanced payment processing capabilities into their applications, platforms and websites.
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: developers@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class FetchPGReconDataInner {
    /**
    * Unique ID associated with the event.
    */
    'eventId'?: string;
    /**
    * The event type can be SETTLEMENT, PAYMENT, REFUND, REFUND_REVERSAL, DISPUTE, DISPUTE_REVERSAL, CHARGEBACK, CHARGEBACK_REVERSAL, OTHER_ADJUSTMENT.
    */
    'eventType'?: string;
    /**
    * Amount that is part of the settlement corresponding to the event.
    */
    'eventSettlementAmount'?: number;
    /**
    * Amount of the event. Example, refund amount, dispute amount, payment amount, etc.
    */
    'eventAmount'?: number;
    /**
    * Indicates if it is CREDIT/DEBIT sale.
    */
    'saleType'?: string | null;
    /**
    * Status of the event. Example - SUCCESS, FAILED, PENDING, CANCELLED.
    */
    'eventStatus'?: string | null;
    /**
    * Recon
    */
    'entity'?: string;
    /**
    * Time associated with the event. Example, transaction time, dispute initiation time
    */
    'eventTime'?: string;
    /**
    * Curreny type - INR.
    */
    'eventCurrency'?: string | null;
    /**
    * Unique order ID. Alphanumeric and only \'-\' and \'_\' allowed.
    */
    'orderId'?: string | null;
    /**
    * The amount which was passed at the order creation time.
    */
    'orderAmount'?: number | null;
    /**
    * Customer phone number.
    */
    'customerPhone'?: string | null;
    /**
    * Customer email.
    */
    'customerEmail'?: string | null;
    /**
    * Customer name.
    */
    'customerName'?: string | null;
    /**
    * Payment amount captured.
    */
    'paymentAmount'?: number | null;
    /**
    * Unique transaction reference number of the payment.
    */
    'paymentUtr'?: string | null;
    /**
    * Date and time when the payment was initiated.
    */
    'paymentTime'?: string | null;
    /**
    * Service charge applicable for the payment.
    */
    'paymentServiceCharge'?: number | null;
    /**
    * Service tax applicable on the payment.
    */
    'paymentServiceTax'?: number | null;
    /**
    * Cashfree Payments unique ID to identify a payment.
    */
    'cfPaymentId'?: number | null;
    /**
    * Unique ID to identify the settlement.
    */
    'cfSettlementId'?: number | null;
    /**
    * Date and time when the settlement was processed.
    */
    'settlementDate'?: string | null;
    /**
    * Unique transaction reference number of the settlement.
    */
    'settlementUtr'?: string | null;
    /**
    * Service charge that is applicable for splitting the payment.
    */
    'splitServiceCharge'?: number | null;
    /**
    * Service tax applicable for splitting the amount to vendors.
    */
    'splitServiceTax'?: number | null;
    /**
    * Vendor commission applicable for this transaction.
    */
    'vendorCommission'?: number | null;
    /**
    * Specifies whether the dispute was closed in favor of the merchant or customer. /n Possible values - Merchant, Customer
    */
    'closedInFavorOf'?: string | null;
    /**
    * Date and time when the dispute was resolved.
    */
    'disputeResolvedOn'?: string | null;
    /**
    * Category of the dispute - Dispute code and the reason for dispute is shown.
    */
    'disputeCategory'?: string | null;
    /**
    * Note regarding the dispute.
    */
    'disputeNote'?: string | null;
    /**
    * Date and time when the refund was processed.
    */
    'refundProcessedAt'?: string | null;
    /**
    * The bank reference number for the refund.
    */
    'refundArn'?: string | null;
    /**
    * A refund note for your reference.
    */
    'refundNote'?: string | null;
    /**
    * An unique ID to associate the refund with.
    */
    'refundId'?: string | null;
    /**
    * Other adjustment remarks.
    */
    'adjustmentRemarks'?: string | null;
    /**
    * Amount that is adjusted from the settlement amount because of any credit/debit event such as refund, refund_reverse etc.
    */
    'adjustment'?: number | null;
    /**
    * Service tax applicable on the settlement amount.
    */
    'serviceTax'?: number | null;
    /**
    * Service charge applicable on the settlement amount.
    */
    'serviceCharge'?: number | null;
    /**
    * Net amount that is settled after considering the adjustments, settlement charge and tax.
    */
    'amountSettled'?: number | null;
    /**
    * The start time of the time range of the payments considered for the settlement.
    */
    'paymentFrom'?: string | null;
    /**
    * The end time of time range of the payments considered for the settlement.
    */
    'paymentTill'?: string | null;
    /**
    * Reason for settlement failure.
    */
    'reason'?: string | null;
    /**
    * Date and time when the settlement was initiated.
    */
    'settlementInitiatedOn'?: string | null;
    /**
    * Type of settlement. Possible values - Standard, Instant, On demand.
    */
    'settlementType'?: string | null;
    /**
    * Settlement charges applicable on the settlement.
    */
    'settlementCharge'?: number | null;
    /**
    * Settlement tax applicable on the settlement.
    */
    'settlementTax'?: number | null;
    /**
    * Remarks on the settlement.
    */
    'remarks'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "eventId",
            "baseName": "event_id",
            "type": "string"
        },
        {
            "name": "eventType",
            "baseName": "event_type",
            "type": "string"
        },
        {
            "name": "eventSettlementAmount",
            "baseName": "event_settlement_amount",
            "type": "number"
        },
        {
            "name": "eventAmount",
            "baseName": "event_amount",
            "type": "number"
        },
        {
            "name": "saleType",
            "baseName": "sale_type",
            "type": "string"
        },
        {
            "name": "eventStatus",
            "baseName": "event_status",
            "type": "string"
        },
        {
            "name": "entity",
            "baseName": "entity",
            "type": "string"
        },
        {
            "name": "eventTime",
            "baseName": "event_time",
            "type": "string"
        },
        {
            "name": "eventCurrency",
            "baseName": "event_currency",
            "type": "string"
        },
        {
            "name": "orderId",
            "baseName": "order_id",
            "type": "string"
        },
        {
            "name": "orderAmount",
            "baseName": "order_amount",
            "type": "number"
        },
        {
            "name": "customerPhone",
            "baseName": "customer_phone",
            "type": "string"
        },
        {
            "name": "customerEmail",
            "baseName": "customer_email",
            "type": "string"
        },
        {
            "name": "customerName",
            "baseName": "customer_name",
            "type": "string"
        },
        {
            "name": "paymentAmount",
            "baseName": "payment_amount",
            "type": "number"
        },
        {
            "name": "paymentUtr",
            "baseName": "payment_utr",
            "type": "string"
        },
        {
            "name": "paymentTime",
            "baseName": "payment_time",
            "type": "string"
        },
        {
            "name": "paymentServiceCharge",
            "baseName": "payment_service_charge",
            "type": "number"
        },
        {
            "name": "paymentServiceTax",
            "baseName": "payment_service_tax",
            "type": "number"
        },
        {
            "name": "cfPaymentId",
            "baseName": "cf_payment_id",
            "type": "number"
        },
        {
            "name": "cfSettlementId",
            "baseName": "cf_settlement_id",
            "type": "number"
        },
        {
            "name": "settlementDate",
            "baseName": "settlement_date",
            "type": "string"
        },
        {
            "name": "settlementUtr",
            "baseName": "settlement_utr",
            "type": "string"
        },
        {
            "name": "splitServiceCharge",
            "baseName": "split_service_charge",
            "type": "number"
        },
        {
            "name": "splitServiceTax",
            "baseName": "split_service_tax",
            "type": "number"
        },
        {
            "name": "vendorCommission",
            "baseName": "vendor_commission",
            "type": "number"
        },
        {
            "name": "closedInFavorOf",
            "baseName": "closed_in_favor_of",
            "type": "string"
        },
        {
            "name": "disputeResolvedOn",
            "baseName": "dispute_resolved_on",
            "type": "string"
        },
        {
            "name": "disputeCategory",
            "baseName": "dispute_category",
            "type": "string"
        },
        {
            "name": "disputeNote",
            "baseName": "dispute_note",
            "type": "string"
        },
        {
            "name": "refundProcessedAt",
            "baseName": "refund_processed_at",
            "type": "string"
        },
        {
            "name": "refundArn",
            "baseName": "refund_arn",
            "type": "string"
        },
        {
            "name": "refundNote",
            "baseName": "refund_note",
            "type": "string"
        },
        {
            "name": "refundId",
            "baseName": "refund_id",
            "type": "string"
        },
        {
            "name": "adjustmentRemarks",
            "baseName": "adjustment_remarks",
            "type": "string"
        },
        {
            "name": "adjustment",
            "baseName": "adjustment",
            "type": "number"
        },
        {
            "name": "serviceTax",
            "baseName": "service_tax",
            "type": "number"
        },
        {
            "name": "serviceCharge",
            "baseName": "service_charge",
            "type": "number"
        },
        {
            "name": "amountSettled",
            "baseName": "amount_settled",
            "type": "number"
        },
        {
            "name": "paymentFrom",
            "baseName": "payment_from",
            "type": "string"
        },
        {
            "name": "paymentTill",
            "baseName": "payment_till",
            "type": "string"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string"
        },
        {
            "name": "settlementInitiatedOn",
            "baseName": "settlement_initiated_on",
            "type": "string"
        },
        {
            "name": "settlementType",
            "baseName": "settlement_type",
            "type": "string"
        },
        {
            "name": "settlementCharge",
            "baseName": "settlement_charge",
            "type": "number"
        },
        {
            "name": "settlementTax",
            "baseName": "settlement_tax",
            "type": "number"
        },
        {
            "name": "remarks",
            "baseName": "remarks",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return FetchPGReconDataInner.attributeTypeMap;
    }
}

